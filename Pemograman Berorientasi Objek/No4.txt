1.Modularitas
	Memudahkan dalam problem solving. Membuat segala sesuatu menjadi objek-objek seperti kapsul (encapsulation) akan membuat program kita bersifat modular = memecah bagian utama menjadi bagian-bagian yang berdiri sendiri.
 Misalnya: Kita tidak perlu menelusuri seluruh file program ketika ada masalah pada user, cukup dengan mencari kesalahan pada class User.

2.Berulang
	Tidak perlu menulis kode berulang-ulang. Kode atau class yang sama bisa digunakan berulang-ulang. Bila ada class yang memerlukan tugas tertentu, maka itu bisa dilakukan dengan membuat class turunan dan menambahkan fungi-fungsi yang diperlukan.
Konsep ini dikenal sebagai pewarisan (inheritance). Misalnya: class User mewariskan sifat kepada class Penulis dan class Admin, akan tetapi masing-masing class turunan bisa menambahkan method tambahan, selain yang diturunkan induknya.

3.Fleksibel
	Sebuah class mudah diadaptasikan. Sebuah fungsi pada sebuah class bisa pakai dan disesuaikan untuk class yang lain, sehingga pemanggilan fungsi yang sama dapat berbeda-beda sesuai dengan yang dibutuhkan.
Sifat ini dikenal sebagai berubah bentuk (polymophism). Misalnya: admin.login() dengan penulis.login() akan melakukan tindakan yang berbeda walaupun sama-sama method login, sebagai contoh: Admin akan masuk ke halaman admin sedangkan penulis akan masuk ke halaman menulis.